name: Push Build to Artifactory
on: 
  workflow_dispatch:
jobs:
 build:
   runs-on: ubuntu-latest
   steps:
   # This action checks out the code from the repository
   - name: Checkout Code
     uses: actions/checkout@v2
   # This action sets up the JFrog CLI with the Artifactory URL and access token 
   - name: Setup JFrog CLI    
     uses: jfrog/setup-jfrog-cli@v3
   - run: jf --version
     env:
       # JFrog platform url (for example: https://acme.jfrog.io)
       JF_URL: ${{ secrets.JF_URL }}
       # JFrog Platform access token npm
       JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
       # JFrog Platform access token for docker
       JF_ACCESS_TOKEN_DOCKER: ${{ secrets.JF_ACCESS_TOKEN_DOCKER }}
       # JFrog Platform access token for generic
       JF_ACCESS_TOKEN_GENERIC: ${{ secrets.JF_ACCESS_TOKEN_GENERIC }}
       # Basic authentication credentials
       JF_USER: ${{ secrets.JF_USER }}
       JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
       TAG: $(date +'%Y.%m.%d.%H.%M')
         
   - name: Install dependencies 
     run: |
        python -m pip install --upgrade pip
        python -m pip install numpy pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
   - name: Build the Docker image
     run: docker build . --file Dockerfile --tag commerce-s1:v1
          
 # Build and push to JFrog Artifactory
   - name: Build and push to JFrog artifactory
     run: |
          
          jf c add --url https://fffenterprises.jfrog.io --user=sgajul@fffenterprises.com --password=AKCp8pRjLx9LhEKprtf2P6kuTNjMuoZXkjcFbmMk9LLSvca7Hqu3N9dGtuwPYYzAPEfWiDN6J commerce-s1
          
          docker images
          jf docker tag commerce-s1:v1 fffenterprises.jfrog.io/fff-commercecloud-develop/commerce-s1:v1 --project=fff --server-id=commerce-s1
          jf docker push fffenterprises.jfrog.io/fff-commercecloud-develop/commerce-s1:v1 --project=fff --server-id=commerce-s1

          
